{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport './nav.css';\nvar links = [{\n  href: '/',\n  label: 'Home'\n}, {\n  href: '../products/fix',\n  label: 'FIX'\n}, {\n  href: '../products/wrapped',\n  label: 'FIX + Wrapped'\n}, {\n  href: '/about',\n  label: 'About us'\n}, {\n  href: '/contact',\n  label: 'Contact us'\n}, {\n  href: '/blog',\n  label: 'Blog'\n}, {\n  href: 'https://fix.virtualagent.com.au/login',\n  label: 'Sign in'\n}].map(function (link) {\n  link.key = \"nav-link-\".concat(link.href, \"-\").concat(link.label);\n  return link;\n}); // useEffect(() => {\n//   var prevScrollpos = window.pageYOffset;\n//   window.onscroll = function() {\n//     var currentScrollPos = window.pageYOffset;\n//     if(prevScrollpos > currentScrollPos) {\n//       document.getElementById('vaNav').classList.add('active');\n//     } else {\n//       document.getElementById('vaNav').classList.remove('active');\n//     }\n//   }\n// })\n\nvar Navigation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Navigation, _React$Component);\n\n  function Navigation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Navigation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Navigation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isTop: true\n    });\n\n    return _this;\n  }\n\n  _createClass(Navigation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      document.addEventListener('scroll', function () {\n        var isTop = window.scrollY < 100;\n\n        if (isTop !== _this2.state.isTop) {\n          _this2.setState({\n            isTop: isTop\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this3 = this;\n\n      document.addEventListener('scroll', function () {\n        var isTop = window.scrollY < 100;\n\n        if (isTop !== _this3.state.isTop) {\n          _this3.setState({\n            isTop: isTop\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Navbar, {\n        expand: \"lg\",\n        id: \"vaNav\",\n        className: this.state.isTop ? 'va-nav-static' : 'va-nav-static active'\n      }, __jsx(Navbar.Brand, {\n        href: \"/\"\n      }, __jsx(\"img\", {\n        src: \"/b-virtual-agent-logo.png\",\n        width: \"75\",\n        title: \"Virtual Agent\",\n        alt: \"Virtual Agent\"\n      })), __jsx(Navbar.Toggle, {\n        \"aria-controls\": \"basic-navbar-nav\"\n      }), __jsx(Navbar.Collapse, {\n        id: \"basic-navbar-nav\"\n      }, __jsx(Nav, {\n        className: \"navigation-items ml-auto\"\n      }, links.map(function (_ref) {\n        var key = _ref.key,\n            href = _ref.href,\n            label = _ref.label;\n        return __jsx(Nav.Link, {\n          key: key,\n          href: href\n        }, label, \" \", __jsx(\"div\", {\n          className: \"underline\"\n        }));\n      }), __jsx(\"a\", {\n        href: \"/contact\",\n        className: this.state.isTop ? 'btn btn-outline-white btn-big f-light smooth-animation' : 'btn btn-outline-white btn-big f-light smooth-animation btn-outline-dark'\n      }, \"Enquire Now\"))));\n    }\n  }]);\n\n  return Navigation;\n}(React.Component);\n\nexport default Navigation;","map":null,"metadata":{},"sourceType":"module"}